<launch>
  <arg name="robot_namespace" default="husky1"/>
  <arg name="test_node_start_delay" default="1.0" />  

  <group ns="$(arg robot_namespace)">
    <!-- Fake CameraInfo from .bagy file -->
    <node pkg="rostopic" type="rostopic" name="camera_info_pub"
          args="pub -f $(find artifact_localization)/test/camera_info.bagy /husky1/camera_front/camera_info sensor_msgs/CameraInfo" output="screen"/>

    <!-- Static identity transforms between base_link, lidar & camera frames -->
    <node pkg="tf" type="static_transform_publisher" name="" args="0 0 0 0 0 0 1 /husky1/map /husky1/base_link 100"/>
    <node pkg="tf" type="static_transform_publisher" name="" args="0 0 0 0 0 0 1 /husky1/base_link /husky1/camera_front/camera_color_optical_frame 100"/>
    <node pkg="tf" type="static_transform_publisher" name="" args="0 0 0 0 0 0 1 /husky1/base_link /husky1/velodyne 100"/>
    <node pkg="tf" type="static_transform_publisher" name="" args="0 0 0 0 0 0 1 /husky1/velodyne /husky1/camera_front/camera_color_optical_frame 100"/>

    <!-- Fake Cube detection from Bluetooth -->
    <include file="$(find artifact_localization)/test/publish_dummy_artifact_detection.launch">
      <arg name="robot_namespace" value=""/>
      <arg name="node_name" value="dummy_cube_bt_detection_pub"/>
      <arg name="artifact" value="Cube"/>
      <arg name="topic" value="bt_rssi/cube"/>
      <arg name="type" value="artifact_msgs/PointSourceDetection"/>
      <arg name="frame" value="world"/>
      <arg name="rate" value="100"/>
      <arg name="signal_strength" value="-39.0"/>
    </include>

    <!-- Fake Cube detection from RGB image -->
    <include file="$(find artifact_localization)/test/publish_dummy_artifact_detection.launch">
      <arg name="robot_namespace" value=""/>
      <arg name="node_name" value="dummy_cube_vision_detection_pub"/>
      <arg name="artifact" value="Cube"/>
      <arg name="topic" value="detected_object/cube"/>
      <arg name="type" value="darknet_ros_msgs/Object"/>
      <arg name="frame" value="world"/>
      <arg name="rate" value="10"/>
      <arg name="bounding_box" value="100 100 200 200"/>
      <arg name="probability" value="1.0"/>
      <arg name="yolo_probability" value="1.0"/>
      <arg name="color_score" value="1.0"/>
      <arg name="camera_name" value="camera_front"/>
    </include>

    <!-- Run tests -->
    <test test-name="test_artifact_localization_pipeline"
          pkg="artifact_localization"
          type="test_artifact_localization_pipeline"
          launch-prefix="bash -c 'sleep $(arg test_node_start_delay); $0 $@' ">
        <rosparam file="$(find artifact_localization)/cfg/artifact_localization.yaml" subst_value="true" />
        <rosparam file="$(find artifact_localization)/cfg/co2_detection.yaml" />
        <rosparam file="$(find artifact_localization)/cfg/msl_raptor_params.yaml" />
    </test>
   </group>
</launch>
